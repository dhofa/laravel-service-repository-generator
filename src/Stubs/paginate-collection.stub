<?php

namespace App\Http\Resources;

use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\ResourceCollection;

class PaginateCollection extends ResourceCollection
{
    protected $keyData;
    protected $pagination;
    protected $resourceClass;
    public $resource;

    public function __construct($resource, $resourceClass, $keyData = 'data')
    {
        $this->resource         = $this->collectResource($resource);
        $this->resourceClass    = $resourceClass;
        $this->keyData          = $keyData;

        parent::__construct($resource);
    }

    /**
     * Transform the resource collection into an array.
     *
     * @return array<int|string, mixed>
     */
    public function toArray(Request $request): array
    {
        return [
            $this->keyData      => $this->resourceClass::collection($this->collection),
            'links'             => [
                'next_url'      => $this->resource->nextPageUrl(),
                'prev_url'      => $this->resource->previousPageUrl(),
                'first_url'     => $this->resource->url(1),
                'last_url'      => $this->resource->url($this->resource->lastPage()),
            ],
            'meta'              => [
                'per_page'      => $this->resource->perPage(),
                'current_page'  => $this->resource->currentPage(),
                'last_page'     => $this->resource->lastPage(),
                'limit'         => $this->resource->perPage(),
                'total'         => $this->resource->total(),
                'from'          => $this->resource->firstItem(),
                'to'            => $this->resource->lastItem(),
            ],
        ];
    }
}
